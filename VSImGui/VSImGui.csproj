<Project Sdk="Microsoft.NET.Sdk">
  <!-- ************************************************** -->
  <!-- *************** Configuration ******************** -->
  
  <!-- Parameters -->
  <PropertyGroup>
    <ModName>Dear ImGui</ModName>
    <GameVersion>1.19.4-rc.2</GameVersion>
    <Version>1.0.0-pre.1</Version>
    <ModId>vsimgui</ModId>
    <Description>Brings famous immediate mode GUI to Vintage Story</Description>
    <Side>Universal</Side>
    <RequiredOnClient>true</RequiredOnClient>
    <RequiredOnServer>false</RequiredOnServer>
  </PropertyGroup>

  <!-- Authors -->
  <ItemGroup>
    <ModInfoAuthors Include="Maltiez" />
  </ItemGroup>

  <!-- Dependencies -->
  <ItemGroup>
    <Dependencies Include="game">
      <Version>$(GameVersion)</Version>
    </Dependencies>
  </ItemGroup>
  
  <!-- ************************************************** -->
  <!-- ************************************************** -->
  
  <!-- Project settings -->
  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
  </PropertyGroup>

  <!-- Paths -->
  <PropertyGroup>
    <ProjectDir>$(MSBuildProjectDirectory)</ProjectDir>
    <OutputPath>bin\$(Configuration)\Mods\mod</OutputPath>
    <ControllerSubmoduleDir>ImGui.NET_OpenTK_Sample_multi-viewports\ImGuiController_OpenTK</ControllerSubmoduleDir>
    <GameDirectory>$(VINTAGE_STORY)</GameDirectory>
    <BindingsDir>$(ProjectDir)\..\$(ControllerSubmoduleDir)\lib\bindings</BindingsDir>
    <NativesDir>$(ProjectDir)\..\$(ControllerSubmoduleDir)\lib\native</NativesDir>
    <AssetsDir>$(ProjectDir)\assets</AssetsDir>
    <ReleasesDir>$(ProjectDir)\Releases</ReleasesDir>
  </PropertyGroup>

  <!-- Builds dependency projects and copies theirs ddls into output directory -->
  <ItemGroup>
    <ProjectReference Include="$(ProjectDir)\..\$(ControllerSubmoduleDir)\ImGuiController_OpenTK.csproj" />
  </ItemGroup>
  
  <!-- References to libraries that are being used in project -->
  <ItemGroup>
    <!-- Bindings: will be copied into output directory -->
    <Reference Include="ImGui.NET">
      <HintPath>$(BindingsDir)\ImGui.NET.dll</HintPath>
    </Reference>
    <Reference Include="ImGuizmo.NET">
      <HintPath>$(BindingsDir)\ImGuizmo.NET.dll</HintPath>
    </Reference>
    <Reference Include="ImNodes.NET">
      <HintPath>$(BindingsDir)\ImNodes.NET.dll</HintPath>
    </Reference>
    <Reference Include="ImPlot.NET" HintPath="">
      <HintPath>$(BindingsDir)\ImPlot.NET.dll</HintPath>
    </Reference>
    <!-- Vintage Story dependencies: wont be copied into output directory -->
    <Reference Include="OpenTK.Compute">
      <HintPath>$(GameDirectory)\Lib\OpenTK.Compute.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="OpenTK.Core">
      <HintPath>$(GameDirectory)\Lib\OpenTK.Core.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="OpenTK.Graphics">
      <HintPath>$(GameDirectory)\Lib\OpenTK.Graphics.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="OpenTK.Input">
      <HintPath>$(GameDirectory)\Lib\OpenTK.Input.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="OpenTK.Mathematics">
      <HintPath>$(GameDirectory)\Lib\OpenTK.Mathematics.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="OpenTK.Windowing.Common">
      <HintPath>$(GameDirectory)\Lib\OpenTK.Windowing.Common.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="OpenTK.Windowing.Desktop">
      <HintPath>$(GameDirectory)\Lib\OpenTK.Windowing.Desktop.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="OpenTK.Windowing.GraphicsLibraryFramework">
      <HintPath>$(GameDirectory)\Lib\OpenTK.Windowing.GraphicsLibraryFramework.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <!-- Vintage Story own libraries: wont be copied into output directory -->
    <Reference Include="VintagestoryAPI">
      <HintPath>$(GameDirectory)/VintagestoryAPI.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(GameDirectory)/Lib/Newtonsoft.Json.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="0Harmony">
      <HintPath>$(GameDirectory)/Lib/0Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="VintagestoryLib">
      <HintPath>$(GameDirectory)/VintagestoryLib.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="protobuf-net">
      <HintPath>$(GameDirectory)/Lib/protobuf-net.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  
  <!-- Creates/update modinfo.json file in build directory -->
  <Target Name="ModInfo" AfterTargets="Build">
    <PropertyGroup>
      <ModInfo>
{
    "type": "code",
    "name": "$(ModName)",
    "modid": "$(ModId)",
    "version": "$(Version)",

    "description": "$(Description)",
    "authors": [ @(ModInfoAuthors->'"%(Identity)"', ', ') ],

    "dependencies": {
        @(Dependencies->'"%(Identity)": "%(Version)"', ', ')
    },
    
    "side" : "$(Side)",
	  "requiredOnClient": $(RequiredOnClient),
	  "requiredOnServer": $(RequiredOnServer)
}
      </ModInfo>
    </PropertyGroup>
    <WriteLinesToFile File="$(OutputPath)/modinfo.json" Lines="$(ModInfo)" Overwrite="true" WriteOnlyWhenDifferent="true" />
  </Target>

  <!-- Copies modicon, assets folder and native libraries into output directory -->
  <Target Name="CopyFilesToOutput" AfterTargets="Build">
    <ItemGroup>
      <NativesFolder Include="$(NativesDir)\**\*.*" />
      <AssetsFolder Include="$(AssetsDir)\**\*.*" />
      <ModIcon Include="modicon.png" />
    </ItemGroup>
    <Copy SourceFiles="@(NativesFolder)" DestinationFiles="@(NativesFolder->'$(OutputPath)native\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(AssetsFolder)" DestinationFiles="@(AssetsFolder->'$(OutputPath)assets\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ModIcon)" DestinationFolder="$(OutputPath)" />
  </Target>

  <!-- Archives output directory into zip and puts it into Releases folder -->
  <Target Name="ZipFiles" AfterTargets="ModInfo" Condition=" '$(Configuration)' == 'Release' ">
    <PropertyGroup>
      <ZipFilePath>$(ReleasesDir)\$(ModId)_$(ModVersion).zip</ZipFilePath>
    </PropertyGroup>
    <MakeDir Directories="$(ReleasesDir)" />
    <Delete Files="$(ZipFilePath)" />
    <ZipDirectory SourceDirectory="$(OutputPath)" DestinationFile="$(ZipFilePath)" />
  </Target>
</Project>